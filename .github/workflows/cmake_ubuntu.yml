name: CMake ubuntu

on: [push]

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
jobs:
  build:
    strategy:
      matrix:
        os: [Ubuntu-20.04, Ubuntu-18.04]
        # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
        BUILD_TYPE: [Release, Debug]

    runs-on: ${{ matrix.os }}
    env:
      BUILD_TYPE:  ${{ matrix.BUILD_TYPE }}
      SOURCE_DIR:  ${{github.workspace}}/source
      TOOSL_DIR:   ${{github.workspace}}/tools
      INSTALL_DIR: ${{github.workspace}}/install
      RABBITPROXYSERVER_VERSION: 0.0.1
      
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    
    - name: make_directory
      run: |
        cmake -E make_directory ${{env.SOURCE_DIR}}
        cmake -E make_directory ${{env.TOOSL_DIR}}
        cmake -E make_directory ${{env.INSTALL_DIR}}
        
    - name: git clone RabbitCommon
      working-directory: ${{env.SOURCE_DIR}}
      run: git clone https://github.com/KangLin/RabbitCommon.git
      
    - name: apt helper action
      uses: ryankurte/action-apt@v0.2.0
      with:
        # architectures to pass to dpkg --add-architecture
        #architectures: # optional
        # apt packages to install
        packages: xvfb xpra libqxmpp-dev debhelper fakeroot doxygen qttools5-dev qttools5-dev-tools qtbase5-dev qtbase5-dev-tools qtmultimedia5-dev qtlocation5-dev libqt5svg5-dev libutf8proc-dev libqtermwidget5-0-dev libpam0g-dev libxkbcommon-dev libxkbcommon-x11-dev libx11-xcb-dev libx11-dev libxfixes-dev

    - name: build libdatachannel
      working-directory: ${{env.SOURCE_DIR}}
      run: |
        git clone https://github.com/paullouisageneau/libdatachannel.git
        cd libdatachannel
        git submodule update --init --recursive
        git checkout -b v0.16.5 v0.16.5
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${{env.INSTALL_DIR}}
        cmake --build . --config Release 
        cmake --build . --config Release --target install
    
    - name: build QtService
      working-directory: ${{env.SOURCE_DIR}}
      run: |
        git clone https://github.com/KangLin/qt-solutions.git
        cd qt-solutions/qtservice
        mkdir build
        cd build
        cmake .. -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES:BOOL=OFF -DCMAKE_INSTALL_PREFIX=${{env.INSTALL_DIR}} -DQt5_DIR=/usr/lib/`uname -m`-linux-gnu/qt5/lib/cmake/Qt5  
        cmake --build . --config Release 
        cmake --build . --config Release --target install
        
    - name: build_debpackage.sh
      working-directory: ${{github.workspace}}
      env:
        RabbitCommon_DIR: ${{env.SOURCE_DIR}}/RabbitCommon
        libdatachannel_DIR: ${{env.INSTALL_DIR}}/share/cmake/libdatachannel
        QtService_DIR: ${{env.INSTALL_DIR}}/lib/cmake/QtService
      run: |
        ./build_debpackage.sh /usr/lib/`uname -m`-linux-gnu/qt5
        cp ../rabbitproxyserver_${{env.RABBITPROXYSERVER_VERSION}}_amd64.deb ${{github.workspace}}/rabbitproxyserver_${{env.RABBITPROXYSERVER_VERSION}}_amd64_${{matrix.os}}.deb
        
#    - name: Update xml file
#      working-directory: ${{github.workspace}}
#      run: |
#        sudo apt-get install -y -qq xvfb xpra
#        sudo Xvfb :99 -ac &
#        export DISPLAY=:99.0
#        sudo dpkg -i ../rabbitproxyserver_${{env.RABBITPROXYSERVER_VERSION}}_amd64.deb
#        /opt/RabbitProxyServer/bin/RabbitProxyServer -f "`pwd`/update_linux.xml" --pf rabbitproxyserver_${{env.RABBITPROXYSERVER_VERSION}}_amd64_${{matrix.os}}.deb -m "v${{env.RABBITPROXYSERVER_VERSION}}"

    - name: update 
      uses: actions/upload-artifact@v2
      with:
          name: rabbitproxyserver_${{ matrix.os }}
          path: rabbitproxyserver_*.deb
      if: ${{ matrix.BUILD_TYPE == 'Release' }} 
     
    #- name: Release
    #  uses: fnkr/github-action-ghr@v1
    #  if: startsWith(github.ref, 'refs/tags/')
    #  env:
    #    GHR_COMPRESS: xz
    #    GHR_PATH: ${{github.workspace}}/rabbitproxyserver_*.deb
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload To Github Release
      if: ${{ matrix.BUILD_TYPE == 'Release' && startsWith(github.ref, 'refs/tags/') }}
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        prerelease: true
        body: |
          [:cn: 修改日志](ChangeLog_zh_CN.md) [:us: Change log](ChangeLog.md)
        files: |
          ${{github.workspace}}/rabbitproxyserver_${{env.RABBITPROXYSERVER_VERSION}}_amd64_${{matrix.os}}.deb
